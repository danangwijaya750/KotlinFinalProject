package com.dngwjy.finalproject.fragmentsimport android.content.Intentimport android.os.Bundleimport android.support.v4.app.Fragmentimport android.support.v4.widget.SwipeRefreshLayoutimport android.support.v7.widget.LinearLayoutManagerimport android.support.v7.widget.RecyclerViewimport android.util.Logimport android.view.LayoutInflaterimport android.view.Viewimport android.view.ViewGroupimport android.widget.AdapterViewimport android.widget.ArrayAdapterimport android.widget.ProgressBarimport android.widget.Spinnerimport com.dngwjy.finalproject.Rimport com.dngwjy.finalproject.R.array.ligaimport com.dngwjy.finalproject.activities.TeamDetailimport com.dngwjy.finalproject.api.ApiRequestimport com.dngwjy.finalproject.data.TeamsAdapterimport com.dngwjy.finalproject.data.models.Teamsimport com.dngwjy.finalproject.presenters.team.TeamPresenterimport com.dngwjy.finalproject.views.TeamsViewimport com.google.gson.Gsonimport org.jetbrains.anko.support.v4.ctximport org.jetbrains.anko.support.v4.onRefreshimport org.jetbrains.anko.support.v4.spclass TeamsFrag: Fragment(), TeamsView {    lateinit var spinner: Spinner    lateinit var recyclerView: RecyclerView    lateinit var swipper: SwipeRefreshLayout    lateinit var presenter: TeamPresenter    lateinit var adapterTeams:TeamsAdapter    lateinit var pgBar: ProgressBar    lateinit var swipeRefreshLayout: SwipeRefreshLayout    var listTeam :MutableList<Teams> = mutableListOf()    override fun init() {        pgBar=rootView.findViewById(R.id.pgBars)        swipeRefreshLayout=rootView.findViewById(R.id.swiping)        spinner= rootView.findViewById(R.id.spinnerLiga)        recyclerView = rootView.findViewById(R.id.recTeam)        val gson= Gson()        val request=ApiRequest()        presenter = TeamPresenter(this,request,gson)        val spinnerItem=resources.getStringArray(liga)        Log.d("spinner item",spinnerItem.toString())        val spinnerAdapter=ArrayAdapter(ctx,android.R.layout.simple_spinner_dropdown_item,spinnerItem)        spinner.adapter=spinnerAdapter        spinner.onItemSelectedListener = object :AdapterView.OnItemSelectedListener{            override fun onNothingSelected(parent: AdapterView<*>?) {            }            override fun onItemSelected(parent: AdapterView<*>?, view: View?, position: Int, id: Long) {              Log.d("Selected Liga", spinner.selectedItem.toString())                presenter.getTeam(spinner.selectedItem.toString().substring(0,4))            }        }        swipeRefreshLayout.onRefresh {            presenter.getTeam(spinner.selectedItem.toString().substring(0,4))        }        val linearManager:LinearLayoutManager= LinearLayoutManager(this.context)        linearManager.orientation=LinearLayoutManager.VERTICAL        recyclerView.layoutManager=linearManager        adapterTeams= TeamsAdapter(this.context!!,listTeam){            val intent= Intent(this.context,TeamDetail::class.java)            intent.putExtra("idTeam",it)            startActivity(intent)        }        recyclerView.adapter=adapterTeams    }    override fun Loading() {        swipeRefreshLayout.isRefreshing=true    }    override fun LoadingFinish() {        swipeRefreshLayout.isRefreshing=false    }    override fun ShowData(data: List<Teams>) {        listTeam.clear()        listTeam.addAll(data)        adapterTeams.notifyDataSetChanged()    }lateinit var rootView:View    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {        rootView=inflater.inflate(R.layout.teams_frag,container,false)        init()        return rootView    }    override fun onActivityCreated(savedInstanceState: Bundle?) {        super.onActivityCreated(savedInstanceState)        init()    }}